"""empty message

Revision ID: 605b01a18430
Revises: 
Create Date: 2018-06-17 15:04:36.203407

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '605b01a18430'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Object',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('vendor', sa.String(length=120), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('visible', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('default_longitude', sa.Float(), nullable=True),
    sa.Column('default_latitude', sa.Float(), nullable=True),
    sa.Column('default_zoom_level', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Pool',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('node_name', sa.String(), nullable=True),
    sa.Column('node_name_regex', sa.Boolean(), nullable=True),
    sa.Column('node_description', sa.String(), nullable=True),
    sa.Column('node_description_regex', sa.Boolean(), nullable=True),
    sa.Column('node_model', sa.String(), nullable=True),
    sa.Column('node_model_regex', sa.Boolean(), nullable=True),
    sa.Column('node_location', sa.String(), nullable=True),
    sa.Column('node_location_regex', sa.Boolean(), nullable=True),
    sa.Column('node_type', sa.String(), nullable=True),
    sa.Column('node_type_regex', sa.Boolean(), nullable=True),
    sa.Column('node_vendor', sa.String(), nullable=True),
    sa.Column('node_vendor_regex', sa.Boolean(), nullable=True),
    sa.Column('node_operating_system', sa.String(), nullable=True),
    sa.Column('node_operating_system_regex', sa.Boolean(), nullable=True),
    sa.Column('node_os_version', sa.String(), nullable=True),
    sa.Column('node_os_version_regex', sa.Boolean(), nullable=True),
    sa.Column('node_ip_address', sa.String(), nullable=True),
    sa.Column('node_ip_address_regex', sa.Boolean(), nullable=True),
    sa.Column('node_longitude', sa.String(), nullable=True),
    sa.Column('node_longitude_regex', sa.Boolean(), nullable=True),
    sa.Column('node_latitude', sa.String(), nullable=True),
    sa.Column('node_latitude_regex', sa.Boolean(), nullable=True),
    sa.Column('link_name', sa.String(), nullable=True),
    sa.Column('link_name_regex', sa.Boolean(), nullable=True),
    sa.Column('link_description', sa.String(), nullable=True),
    sa.Column('link_description_regex', sa.Boolean(), nullable=True),
    sa.Column('link_model', sa.String(), nullable=True),
    sa.Column('link_model_regex', sa.Boolean(), nullable=True),
    sa.Column('link_location', sa.String(), nullable=True),
    sa.Column('link_location_regex', sa.Boolean(), nullable=True),
    sa.Column('link_type', sa.String(), nullable=True),
    sa.Column('link_type_regex', sa.Boolean(), nullable=True),
    sa.Column('link_vendor', sa.String(), nullable=True),
    sa.Column('link_vendor_regex', sa.Boolean(), nullable=True),
    sa.Column('link_source', sa.String(), nullable=True),
    sa.Column('link_source_regex', sa.Boolean(), nullable=True),
    sa.Column('link_destination', sa.String(), nullable=True),
    sa.Column('link_destination_regex', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Script',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('SyslogServer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(length=120), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('TacacsServer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(length=120), nullable=True),
    sa.Column('password', sa.String(length=120), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('timeout', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ip_address'),
    sa.UniqueConstraint('password')
    )
    op.create_table('User',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('access_rights', sa.String(length=120), nullable=True),
    sa.Column('password', sa.String(length=30), nullable=True),
    sa.Column('secret_password', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Workflow',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('vendor', sa.String(), nullable=True),
    sa.Column('operating_system', sa.String(), nullable=True),
    sa.Column('start_task', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('AnsibleScript',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor', sa.String(), nullable=True),
    sa.Column('operating_system', sa.String(), nullable=True),
    sa.Column('playbook_path', sa.String(), nullable=True),
    sa.Column('arguments', sa.String(), nullable=True),
    sa.Column('graphical_inventory', sa.Boolean(), nullable=True),
    sa.Column('options', sa.PickleType(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Script.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('CustomScript',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_name', sa.String(), nullable=True),
    sa.Column('vendor', sa.String(), nullable=True),
    sa.Column('operating_system', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Script.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('FileTransferScript',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor', sa.String(), nullable=True),
    sa.Column('operating_system', sa.String(), nullable=True),
    sa.Column('driver', sa.String(), nullable=True),
    sa.Column('source_file', sa.String(), nullable=True),
    sa.Column('dest_file', sa.String(), nullable=True),
    sa.Column('file_system', sa.String(), nullable=True),
    sa.Column('direction', sa.String(), nullable=True),
    sa.Column('overwrite_file', sa.Boolean(), nullable=True),
    sa.Column('disable_md5', sa.Boolean(), nullable=True),
    sa.Column('inline_transfer', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Script.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('NapalmActionScript',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor', sa.String(), nullable=True),
    sa.Column('operating_system', sa.String(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Script.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('action')
    )
    op.create_table('NapalmConfigScript',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor', sa.String(), nullable=True),
    sa.Column('operating_system', sa.String(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Script.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('NapalmGettersScript',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor', sa.String(), nullable=True),
    sa.Column('operating_system', sa.String(), nullable=True),
    sa.Column('getters', sa.PickleType(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Script.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('NetmikoConfigScript',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor', sa.String(), nullable=True),
    sa.Column('operating_system', sa.String(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('driver', sa.String(), nullable=True),
    sa.Column('global_delay_factor', sa.Float(), nullable=True),
    sa.Column('netmiko_type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Script.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('NetmikoValidationScript',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor', sa.String(), nullable=True),
    sa.Column('operating_system', sa.String(), nullable=True),
    sa.Column('driver', sa.String(), nullable=True),
    sa.Column('command1', sa.String(), nullable=True),
    sa.Column('command2', sa.String(), nullable=True),
    sa.Column('command3', sa.String(), nullable=True),
    sa.Column('pattern1', sa.String(), nullable=True),
    sa.Column('pattern2', sa.String(), nullable=True),
    sa.Column('pattern3', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Script.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Node',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('operating_system', sa.String(length=120), nullable=True),
    sa.Column('os_version', sa.String(length=120), nullable=True),
    sa.Column('ip_address', sa.String(length=120), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('secret_password', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Object.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('result', sa.Boolean(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('logs', sa.PickleType(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Antenna',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Node.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Firewall',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Node.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Host',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Node.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('InnerTask',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=True),
    sa.Column('x', sa.Integer(), nullable=True),
    sa.Column('y', sa.Integer(), nullable=True),
    sa.Column('waiting_time', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Task.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['Workflow.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Link',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('destination_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['destination_id'], ['Node.id'], ),
    sa.ForeignKeyConstraint(['id'], ['Object.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['Node.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Optical switch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Node.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Regenerator',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Node.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Router',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Node.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ScheduledTask',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recurrent', sa.Boolean(), nullable=True),
    sa.Column('run_immediately', sa.Boolean(), nullable=True),
    sa.Column('creation_time', sa.Integer(), nullable=True),
    sa.Column('frequency', sa.String(length=120), nullable=True),
    sa.Column('start_date', sa.String(), nullable=True),
    sa.Column('end_date', sa.String(), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Server',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Node.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Switch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Node.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pool_node_association',
    sa.Column('pool_id', sa.Integer(), nullable=True),
    sa.Column('node_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['node_id'], ['Node.id'], ),
    sa.ForeignKeyConstraint(['pool_id'], ['Pool.id'], )
    )
    op.create_table('BGP peering',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Link.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Etherchannel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Link.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Ethernet link',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Link.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Optical channel',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Link.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Optical link',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Link.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Pseudowire',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Link.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ScheduledScriptTask',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['ScheduledTask.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ScheduledWorkflowTask',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scheduled_workflow_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['ScheduledTask.id'], ),
    sa.ForeignKeyConstraint(['scheduled_workflow_id'], ['Workflow.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('WorkflowEdge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('destination_id', sa.Integer(), nullable=True),
    sa.Column('workflow_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['destination_id'], ['InnerTask.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['InnerTask.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['Workflow.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inner_task_node_association',
    sa.Column('node_id', sa.Integer(), nullable=True),
    sa.Column('inner_task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inner_task_id'], ['InnerTask.id'], ),
    sa.ForeignKeyConstraint(['node_id'], ['Node.id'], )
    )
    op.create_table('inner_task_script_association',
    sa.Column('script_id', sa.Integer(), nullable=True),
    sa.Column('inner_task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inner_task_id'], ['InnerTask.id'], ),
    sa.ForeignKeyConstraint(['script_id'], ['Script.id'], )
    )
    op.create_table('pool_link_association',
    sa.Column('pool_id', sa.Integer(), nullable=True),
    sa.Column('link_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['link_id'], ['Link.id'], ),
    sa.ForeignKeyConstraint(['pool_id'], ['Pool.id'], )
    )
    op.create_table('scheduled_task_node_association',
    sa.Column('node_id', sa.Integer(), nullable=True),
    sa.Column('scheduled_script_task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['node_id'], ['Node.id'], ),
    sa.ForeignKeyConstraint(['scheduled_script_task_id'], ['ScheduledScriptTask.id'], )
    )
    op.create_table('scheduled_task_script_association',
    sa.Column('script_id', sa.Integer(), nullable=True),
    sa.Column('scheduled_script_task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['scheduled_script_task_id'], ['ScheduledScriptTask.id'], ),
    sa.ForeignKeyConstraint(['script_id'], ['Script.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('scheduled_task_script_association')
    op.drop_table('scheduled_task_node_association')
    op.drop_table('pool_link_association')
    op.drop_table('inner_task_script_association')
    op.drop_table('inner_task_node_association')
    op.drop_table('WorkflowEdge')
    op.drop_table('ScheduledWorkflowTask')
    op.drop_table('ScheduledScriptTask')
    op.drop_table('Pseudowire')
    op.drop_table('Optical link')
    op.drop_table('Optical channel')
    op.drop_table('Ethernet link')
    op.drop_table('Etherchannel')
    op.drop_table('BGP peering')
    op.drop_table('pool_node_association')
    op.drop_table('Switch')
    op.drop_table('Server')
    op.drop_table('ScheduledTask')
    op.drop_table('Router')
    op.drop_table('Regenerator')
    op.drop_table('Optical switch')
    op.drop_table('Link')
    op.drop_table('InnerTask')
    op.drop_table('Host')
    op.drop_table('Firewall')
    op.drop_table('Antenna')
    op.drop_table('Task')
    op.drop_table('Node')
    op.drop_table('NetmikoValidationScript')
    op.drop_table('NetmikoConfigScript')
    op.drop_table('NapalmGettersScript')
    op.drop_table('NapalmConfigScript')
    op.drop_table('NapalmActionScript')
    op.drop_table('FileTransferScript')
    op.drop_table('CustomScript')
    op.drop_table('AnsibleScript')
    op.drop_table('Workflow')
    op.drop_table('User')
    op.drop_table('TacacsServer')
    op.drop_table('SyslogServer')
    op.drop_table('Script')
    op.drop_table('Pool')
    op.drop_table('Parameters')
    op.drop_table('Object')
    op.drop_table('Log')
    # ### end Alembic commands ###
